<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/cache  
    		http://www.springframework.org/schema/cache/spring-cache.xsd  
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClass}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
		
		<!-- 配置初始化大小、最小、最大 -->  
<!--         <property name="initialSize" value="1"/>   -->
<!--         <property name="minIdle" value="1"/>   -->
<!--         <property name="maxActive" value="10"/>   -->
  
<!--         配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒   -->
<!--         <property name="timeBetweenEvictionRunsMillis" value="6000"/>   -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!--
	<bean class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.tic.sm.dao.UserDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	-->
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<property name="basePackage" value="com.dnnd.admin.dao" />
	</bean>

	<!-- 启用spring mvc 注解 -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 使Spring支持自动检测组件，如注解的Controller -->
	<context:component-scan base-package="com.dnnd.admin" />
	
	<!-- 缓存 -->
	<!-- 	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">   -->
	<!--      <property name="configLocation" value="classpath:ehcache.xml" />   -->
	<!--    </bean> -->
	
	<!-- 启用对事务注解的支持 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    <!-- Cache配置 -->  
    <cache:annotation-driven cache-manager="cacheManager"/>  
    <bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"  
          p:configLocation="classpath:ehcache.xml"/>  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"  
          p:cacheManager-ref="ehCacheManagerFactory"/>
	
	<!--切面应用 -->
	<aop:config>
        <aop:advisor pointcut="execution(* com.dnnd.admin.service..*.*(..)) or execution(* com.dnnd.client.service..*.*(..))" advice-ref="txAdvice" />
    </aop:config>
	
	<!-- 事务管理 通知 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->  
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <!-- select,count开头的方法,开启只读,提高数据库访问性能 -->  
            <tx:method name="select*" read-only="true"/>  
            <tx:method name="get*" read-only="true"/>  
            <tx:method name="find*" read-only="true"/>  
            <tx:method name="load*" read-only="true"/>  
            <tx:method name="count*" read-only="true"/>  
            <!-- 对其他方法 使用默认的事务管理 -->  
            <tx:method name="*"/>  
        </tx:attributes>  
    </tx:advice>
    
    <!-- 配置使Spring采用CGLIB代理 -->  
    <aop:aspectj-autoproxy proxy-target-class="true"/>  
  
    <!-- 启用对事务注解的支持 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<!-- 对静态资源文件的访问  方案一 （二选一）   
    <mvc:default-servlet-handler/> --> 
      
    <!-- 对静态资源文件的访问  方案二 （二选一）-->
    
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/easyui-1-15/**" location="/easyui-1-15/" />
	<mvc:resources mapping="/easyui/**" location="/easyui/" />
	<mvc:resources mapping="/commonjs/**" location="/easyui/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/js/**" location="/js/" />
</beans>